ice4j {
   ice {
     max-check-list-size = 100
     // The amount of time that we must wait after ICE processing enters a COMPLETED state before we free candidates
     // and move into the TERMINATED state.
     termination-delay = 3 seconds
   }

  consent-freshness {
    // How often a STUN Binding request used for consent freshness check will be sent.
    interval = 15 seconds
    // The amount of time without a valid STUN Binding response after which a STUN Binding request is to be
    // retransmitted according to `STUN Usage for Consent Freshness` (RFC7675).
    // This is the original value for back-off strategy, while `max-wait-interval` sets the upper limit.
    original-wait-interval = 500 milliseconds
    // The amount of time without a valid STUN Binding response after which a STUN Binding request is to be
    // retransmitted according to `STUN Usage for Consent Freshness` (RFC7675).
    // This is the final value for the back-off strategy, while `original-wait-interval` defines the initial interval for
    // the first request sent.
    max-wait-interval = 500 milliseconds
    // The maximum number of retransmissions of a STUN Binding request without a valid STUN Binding response after which
    // consent freshness is to be considered unconfirmed according to `STUN Usage for Consent Freshness` (RFC7675).
    max-retransmissions = 30
  }

  // Configuration related to harvesting (aka gathering) of local candidates.
  harvest {
    // Whether to harvest IPv6 addresses.
    use-ipv6 = true
    // Whether to use link-local addresses when harvesting candidates.
    use-link-local-addresses = true

    // How long to wait for an individual harvest before timing out.
    timeout = 15 seconds

    // Configuration for the "single port" UDP harvester.
    udp {
      // The size in bytes to set on the UDP socket (SO_RCVBUF). If not specified, the default from the OS will be used.
      #receive-buffer-size = 10485760

      // Whether to allocate ephemeral ports for local candidates.
      use-dynamic-ports = true
    }

    // Configuration for the set of "mapping" harvesters.
    mapping {
      aws {
        enabled = true
        // Whether to use the AWS harvester even when the automatic detection indicates that we are not running in AWS.
        force = false
      }
      stun {
        addresses = [ ]
        # addresses = [ "stun1.example.com:5379", "stun2.example.com:443" ]
      }
    }
  }
}
